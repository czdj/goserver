// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ServerHello struct {
	Info                 *ServerInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Mss                  []string    `protobuf:"bytes,2,rep,name=mss,proto3" json:"mss,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ServerHello) Reset()         { *m = ServerHello{} }
func (m *ServerHello) String() string { return proto.CompactTextString(m) }
func (*ServerHello) ProtoMessage()    {}
func (*ServerHello) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{0}
}

func (m *ServerHello) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerHello.Unmarshal(m, b)
}
func (m *ServerHello) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerHello.Marshal(b, m, deterministic)
}
func (m *ServerHello) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerHello.Merge(m, src)
}
func (m *ServerHello) XXX_Size() int {
	return xxx_messageInfo_ServerHello.Size(m)
}
func (m *ServerHello) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerHello.DiscardUnknown(m)
}

var xxx_messageInfo_ServerHello proto.InternalMessageInfo

func (m *ServerHello) GetInfo() *ServerInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *ServerHello) GetMss() []string {
	if m != nil {
		return m.Mss
	}
	return nil
}

type GamerNotify struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	S2C                  *S2C     `protobuf:"bytes,2,opt,name=s2c,proto3" json:"s2c,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GamerNotify) Reset()         { *m = GamerNotify{} }
func (m *GamerNotify) String() string { return proto.CompactTextString(m) }
func (*GamerNotify) ProtoMessage()    {}
func (*GamerNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{1}
}

func (m *GamerNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GamerNotify.Unmarshal(m, b)
}
func (m *GamerNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GamerNotify.Marshal(b, m, deterministic)
}
func (m *GamerNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GamerNotify.Merge(m, src)
}
func (m *GamerNotify) XXX_Size() int {
	return xxx_messageInfo_GamerNotify.Size(m)
}
func (m *GamerNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_GamerNotify.DiscardUnknown(m)
}

var xxx_messageInfo_GamerNotify proto.InternalMessageInfo

func (m *GamerNotify) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GamerNotify) GetS2C() *S2C {
	if m != nil {
		return m.S2C
	}
	return nil
}

//广播数据
type LeagueBroadcastData struct {
	ExceptId             int32    `protobuf:"varint,1,opt,name=exceptId,proto3" json:"exceptId,omitempty"`
	Gid                  int32    `protobuf:"varint,2,opt,name=gid,proto3" json:"gid,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LeagueBroadcastData) Reset()         { *m = LeagueBroadcastData{} }
func (m *LeagueBroadcastData) String() string { return proto.CompactTextString(m) }
func (*LeagueBroadcastData) ProtoMessage()    {}
func (*LeagueBroadcastData) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{2}
}

func (m *LeagueBroadcastData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeagueBroadcastData.Unmarshal(m, b)
}
func (m *LeagueBroadcastData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeagueBroadcastData.Marshal(b, m, deterministic)
}
func (m *LeagueBroadcastData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeagueBroadcastData.Merge(m, src)
}
func (m *LeagueBroadcastData) XXX_Size() int {
	return xxx_messageInfo_LeagueBroadcastData.Size(m)
}
func (m *LeagueBroadcastData) XXX_DiscardUnknown() {
	xxx_messageInfo_LeagueBroadcastData.DiscardUnknown(m)
}

var xxx_messageInfo_LeagueBroadcastData proto.InternalMessageInfo

func (m *LeagueBroadcastData) GetExceptId() int32 {
	if m != nil {
		return m.ExceptId
	}
	return 0
}

func (m *LeagueBroadcastData) GetGid() int32 {
	if m != nil {
		return m.Gid
	}
	return 0
}

func (m *LeagueBroadcastData) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

//联盟消息
type LeagueMsg struct {
	LeagueId             int32                `protobuf:"varint,1,opt,name=leagueId,proto3" json:"leagueId,omitempty"`
	BroadcastData        *LeagueBroadcastData `protobuf:"bytes,2,opt,name=broadcastData,proto3" json:"broadcastData,omitempty"`
	OnlineLeague         *OnlineLeague        `protobuf:"bytes,3,opt,name=onlineLeague,proto3" json:"onlineLeague,omitempty"`
	CreateLeague         *CreateLeagueC2S     `protobuf:"bytes,4,opt,name=createLeague,proto3" json:"createLeague,omitempty"`
	RetCreateLeague      *CreateLeagueS2C     `protobuf:"bytes,5,opt,name=retCreateLeague,proto3" json:"retCreateLeague,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LeagueMsg) Reset()         { *m = LeagueMsg{} }
func (m *LeagueMsg) String() string { return proto.CompactTextString(m) }
func (*LeagueMsg) ProtoMessage()    {}
func (*LeagueMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{3}
}

func (m *LeagueMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeagueMsg.Unmarshal(m, b)
}
func (m *LeagueMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeagueMsg.Marshal(b, m, deterministic)
}
func (m *LeagueMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeagueMsg.Merge(m, src)
}
func (m *LeagueMsg) XXX_Size() int {
	return xxx_messageInfo_LeagueMsg.Size(m)
}
func (m *LeagueMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_LeagueMsg.DiscardUnknown(m)
}

var xxx_messageInfo_LeagueMsg proto.InternalMessageInfo

func (m *LeagueMsg) GetLeagueId() int32 {
	if m != nil {
		return m.LeagueId
	}
	return 0
}

func (m *LeagueMsg) GetBroadcastData() *LeagueBroadcastData {
	if m != nil {
		return m.BroadcastData
	}
	return nil
}

func (m *LeagueMsg) GetOnlineLeague() *OnlineLeague {
	if m != nil {
		return m.OnlineLeague
	}
	return nil
}

func (m *LeagueMsg) GetCreateLeague() *CreateLeagueC2S {
	if m != nil {
		return m.CreateLeague
	}
	return nil
}

func (m *LeagueMsg) GetRetCreateLeague() *CreateLeagueS2C {
	if m != nil {
		return m.RetCreateLeague
	}
	return nil
}

type RPC struct {
	Id                   int32                   `protobuf:"varint,2000,opt,name=id,proto3" json:"id,omitempty"`
	ServerHello          *ServerHello            `protobuf:"bytes,2001,opt,name=serverHello,proto3" json:"serverHello,omitempty"`
	GamerNotify          *GamerNotify            `protobuf:"bytes,2002,opt,name=gamerNotify,proto3" json:"gamerNotify,omitempty"`
	TestChatC2S          *GamerTestChatC2S       `protobuf:"bytes,1,opt,name=testChatC2S,proto3" json:"testChatC2S,omitempty"`
	TestChatS2C          *GamerTestChatS2C       `protobuf:"bytes,2,opt,name=testChatS2C,proto3" json:"testChatS2C,omitempty"`
	MatchC2S             *GamerMatchC2S          `protobuf:"bytes,3,opt,name=matchC2S,proto3" json:"matchC2S,omitempty"`
	MatchS2C             *GamerMatchS2C          `protobuf:"bytes,4,opt,name=matchS2C,proto3" json:"matchS2C,omitempty"`
	SyncC2S              *GamerPVPSyncC2S        `protobuf:"bytes,5,opt,name=syncC2S,proto3" json:"syncC2S,omitempty"`
	SyncS2C              *GamerPVPSyncS2C        `protobuf:"bytes,6,opt,name=syncS2C,proto3" json:"syncS2C,omitempty"`
	CheckPVPBattleC2S    *GamerCheckPVPBattleC2S `protobuf:"bytes,7,opt,name=checkPVPBattleC2S,proto3" json:"checkPVPBattleC2S,omitempty"`
	CheckPVPBattleS2C    *GamerCheckPVPBattleS2C `protobuf:"bytes,8,opt,name=checkPVPBattleS2C,proto3" json:"checkPVPBattleS2C,omitempty"`
	LeagueMsg            *LeagueMsg              `protobuf:"bytes,9,opt,name=leagueMsg,proto3" json:"leagueMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *RPC) Reset()         { *m = RPC{} }
func (m *RPC) String() string { return proto.CompactTextString(m) }
func (*RPC) ProtoMessage()    {}
func (*RPC) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{4}
}

func (m *RPC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RPC.Unmarshal(m, b)
}
func (m *RPC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RPC.Marshal(b, m, deterministic)
}
func (m *RPC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RPC.Merge(m, src)
}
func (m *RPC) XXX_Size() int {
	return xxx_messageInfo_RPC.Size(m)
}
func (m *RPC) XXX_DiscardUnknown() {
	xxx_messageInfo_RPC.DiscardUnknown(m)
}

var xxx_messageInfo_RPC proto.InternalMessageInfo

func (m *RPC) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RPC) GetServerHello() *ServerHello {
	if m != nil {
		return m.ServerHello
	}
	return nil
}

func (m *RPC) GetGamerNotify() *GamerNotify {
	if m != nil {
		return m.GamerNotify
	}
	return nil
}

func (m *RPC) GetTestChatC2S() *GamerTestChatC2S {
	if m != nil {
		return m.TestChatC2S
	}
	return nil
}

func (m *RPC) GetTestChatS2C() *GamerTestChatS2C {
	if m != nil {
		return m.TestChatS2C
	}
	return nil
}

func (m *RPC) GetMatchC2S() *GamerMatchC2S {
	if m != nil {
		return m.MatchC2S
	}
	return nil
}

func (m *RPC) GetMatchS2C() *GamerMatchS2C {
	if m != nil {
		return m.MatchS2C
	}
	return nil
}

func (m *RPC) GetSyncC2S() *GamerPVPSyncC2S {
	if m != nil {
		return m.SyncC2S
	}
	return nil
}

func (m *RPC) GetSyncS2C() *GamerPVPSyncS2C {
	if m != nil {
		return m.SyncS2C
	}
	return nil
}

func (m *RPC) GetCheckPVPBattleC2S() *GamerCheckPVPBattleC2S {
	if m != nil {
		return m.CheckPVPBattleC2S
	}
	return nil
}

func (m *RPC) GetCheckPVPBattleS2C() *GamerCheckPVPBattleS2C {
	if m != nil {
		return m.CheckPVPBattleS2C
	}
	return nil
}

func (m *RPC) GetLeagueMsg() *LeagueMsg {
	if m != nil {
		return m.LeagueMsg
	}
	return nil
}

func init() {
	proto.RegisterType((*ServerHello)(nil), "ServerHello")
	proto.RegisterType((*GamerNotify)(nil), "GamerNotify")
	proto.RegisterType((*LeagueBroadcastData)(nil), "LeagueBroadcastData")
	proto.RegisterType((*LeagueMsg)(nil), "LeagueMsg")
	proto.RegisterType((*RPC)(nil), "RPC")
}

func init() { proto.RegisterFile("rpc.proto", fileDescriptor_77a6da22d6a3feb1) }

var fileDescriptor_77a6da22d6a3feb1 = []byte{
	// 520 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x94, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0xd5, 0xc4, 0x69, 0x93, 0xb1, 0x9b, 0xb4, 0x0b, 0x02, 0xab, 0x17, 0x22, 0x9f, 0xa2,
	0x1e, 0x8c, 0x70, 0xe1, 0xd2, 0x13, 0xaa, 0x41, 0x50, 0x89, 0x82, 0xb5, 0x46, 0xe5, 0x88, 0xb6,
	0xeb, 0x4d, 0x62, 0xe1, 0xd8, 0x91, 0x77, 0x8b, 0xe8, 0x1b, 0xf0, 0x6c, 0x9c, 0x80, 0x27, 0x42,
	0xbb, 0xeb, 0xb5, 0x37, 0x7f, 0xb8, 0xed, 0xcc, 0xfc, 0xbe, 0x6f, 0xc6, 0x1e, 0xaf, 0x61, 0x54,
	0xaf, 0x69, 0xb8, 0xae, 0x2b, 0x51, 0x9d, 0x79, 0x9c, 0xd5, 0xdf, 0x59, 0x6d, 0x22, 0x5a, 0xe4,
	0xac, 0x14, 0x4d, 0x34, 0x26, 0xf7, 0xa2, 0xfa, 0xca, 0xa3, 0x96, 0x2d, 0x18, 0x59, 0xdc, 0x33,
	0x1d, 0x05, 0xaf, 0xc1, 0x4d, 0x95, 0xf6, 0x3d, 0x2b, 0x8a, 0x0a, 0x3d, 0x03, 0x27, 0x2f, 0xe7,
	0x95, 0x7f, 0x30, 0x3d, 0x98, 0xb9, 0x91, 0x1b, 0xea, 0xda, 0x75, 0x39, 0xaf, 0xb0, 0x2a, 0xa0,
	0x13, 0xe8, 0xaf, 0x38, 0xf7, 0x7b, 0xd3, 0xfe, 0x6c, 0x84, 0xe5, 0x31, 0x78, 0x05, 0xee, 0x3b,
	0xb2, 0x62, 0xf5, 0xc7, 0x4a, 0xe4, 0xf3, 0x07, 0x34, 0x86, 0x5e, 0x9e, 0x29, 0xfd, 0x00, 0xf7,
	0xf2, 0x0c, 0x3d, 0x81, 0x3e, 0x8f, 0xa8, 0xdf, 0x53, 0x86, 0x4e, 0x98, 0x46, 0x31, 0x96, 0x89,
	0xe0, 0x0b, 0x3c, 0xfa, 0xa0, 0x06, 0xb9, 0xaa, 0x2b, 0x92, 0x51, 0xc2, 0xc5, 0x1b, 0x22, 0x08,
	0x3a, 0x83, 0x21, 0xfb, 0x41, 0xd9, 0x5a, 0x5c, 0x1b, 0x93, 0x36, 0x96, 0xbd, 0x17, 0x79, 0xa6,
	0xac, 0x06, 0x58, 0x1e, 0x11, 0x02, 0x27, 0x23, 0x82, 0xf8, 0xfd, 0xe9, 0xc1, 0xcc, 0xc3, 0xea,
	0x1c, 0xfc, 0xec, 0xc1, 0x48, 0x3b, 0xdf, 0xf0, 0x85, 0xf4, 0xd3, 0xcf, 0xdb, 0xf9, 0x99, 0x18,
	0x5d, 0xc2, 0xf1, 0x9d, 0xdd, 0xbc, 0x19, 0xf2, 0x71, 0xb8, 0x67, 0x30, 0xbc, 0x89, 0xa2, 0x17,
	0xe0, 0x55, 0x65, 0x91, 0x97, 0x4c, 0xb3, 0x6a, 0x02, 0x37, 0x3a, 0x0e, 0x3f, 0x59, 0x49, 0xbc,
	0x81, 0xa0, 0x97, 0xe0, 0xd1, 0x9a, 0x11, 0x61, 0x24, 0x8e, 0x92, 0x9c, 0x84, 0xb1, 0x95, 0x8c,
	0xa3, 0x14, 0x6f, 0x50, 0xe8, 0x12, 0x26, 0x35, 0x13, 0x36, 0xe3, 0x0f, 0xf6, 0x08, 0xe5, 0x7b,
	0xdd, 0x06, 0x83, 0x5f, 0x0e, 0xf4, 0x71, 0x12, 0xa3, 0x89, 0xda, 0xc9, 0xef, 0x49, 0xbb, 0x94,
	0xe7, 0xe0, 0xf2, 0x6e, 0xeb, 0xfe, 0x9f, 0x89, 0x72, 0xf4, 0x42, 0xeb, 0x53, 0xc0, 0x36, 0x21,
	0x05, 0x8b, 0x6e, 0xc9, 0xfe, 0x5f, 0x23, 0xb0, 0x36, 0x8f, 0x6d, 0x02, 0x5d, 0x80, 0x2b, 0x18,
	0x17, 0xf1, 0x92, 0x88, 0x38, 0x4a, 0x9b, 0xef, 0xe9, 0x54, 0xf3, 0x9f, 0xbb, 0x02, 0xb6, 0x29,
	0x5b, 0x94, 0x46, 0x71, 0xb3, 0x8e, 0x2d, 0x91, 0x7c, 0x50, 0x9b, 0x42, 0xe7, 0x30, 0x5c, 0x11,
	0x41, 0x97, 0xb2, 0x8d, 0xde, 0xc2, 0x58, 0x2b, 0x6e, 0x9a, 0x2c, 0x6e, 0xeb, 0x2d, 0x2b, 0xdd,
	0x9d, 0x1d, 0x56, 0x5a, 0xb7, 0x75, 0x74, 0x0e, 0x47, 0xfc, 0xa1, 0xa4, 0xd2, 0xd6, 0xbc, 0x70,
	0x85, 0x26, 0xb7, 0x49, 0xaa, 0xf3, 0xd8, 0x00, 0x86, 0x95, 0xb6, 0x87, 0x7b, 0x58, 0x69, 0x6c,
	0x00, 0xf4, 0x16, 0x4e, 0xe9, 0x92, 0xd1, 0x6f, 0xc9, 0x6d, 0x72, 0x45, 0x84, 0x28, 0xe4, 0xce,
	0xfd, 0x23, 0xa5, 0x7a, 0xaa, 0x55, 0xf1, 0x76, 0x19, 0xef, 0x2a, 0x76, 0x6d, 0x64, 0xf3, 0xe1,
	0xff, 0x6d, 0xe4, 0x0c, 0xbb, 0x0a, 0x34, 0x83, 0x51, 0x61, 0x2e, 0x8b, 0x3f, 0x52, 0x72, 0x08,
	0xdb, 0xeb, 0x83, 0xbb, 0xe2, 0xdd, 0xa1, 0xfa, 0x61, 0x5c, 0xfc, 0x0b, 0x00, 0x00, 0xff, 0xff,
	0x2e, 0x41, 0xf4, 0x16, 0x77, 0x04, 0x00, 0x00,
}
