// Code generated by protoc-gen-go. DO NOT EDIT.
// source: const_define.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//玩家状态
type GamerStatus int32

const (
	GamerStatus_Offline  GamerStatus = 0
	GamerStatus_Online   GamerStatus = 1
	GamerStatus_Teaming  GamerStatus = 2
	GamerStatus_Matching GamerStatus = 3
	GamerStatus_Fighting GamerStatus = 4
)

var GamerStatus_name = map[int32]string{
	0: "Offline",
	1: "Online",
	2: "Teaming",
	3: "Matching",
	4: "Fighting",
}

var GamerStatus_value = map[string]int32{
	"Offline":  0,
	"Online":   1,
	"Teaming":  2,
	"Matching": 3,
	"Fighting": 4,
}

func (x GamerStatus) String() string {
	return proto.EnumName(GamerStatus_name, int32(x))
}

func (GamerStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_957aaf6e167bf036, []int{0}
}

type ChatChannel int32

const (
	ChatChannel_GamerChat ChatChannel = 0
	ChatChannel_WorldChat ChatChannel = 1
)

var ChatChannel_name = map[int32]string{
	0: "GamerChat",
	1: "WorldChat",
}

var ChatChannel_value = map[string]int32{
	"GamerChat": 0,
	"WorldChat": 1,
}

func (x ChatChannel) String() string {
	return proto.EnumName(ChatChannel_name, int32(x))
}

func (ChatChannel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_957aaf6e167bf036, []int{1}
}

//邮件类型
type MailType int32

const (
	MailType_ActivityMail     MailType = 0
	MailType_SysMail          MailType = 1
	MailType_AnnouncementMail MailType = 2
	MailType_GamerMail        MailType = 3
)

var MailType_name = map[int32]string{
	0: "ActivityMail",
	1: "SysMail",
	2: "AnnouncementMail",
	3: "GamerMail",
}

var MailType_value = map[string]int32{
	"ActivityMail":     0,
	"SysMail":          1,
	"AnnouncementMail": 2,
	"GamerMail":        3,
}

func (x MailType) String() string {
	return proto.EnumName(MailType_name, int32(x))
}

func (MailType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_957aaf6e167bf036, []int{2}
}

//邮件附件状态
type MailState int32

const (
	MailState_MailUnRead   MailState = 0
	MailState_MailRead     MailState = 1
	MailState_MailReceived MailState = 2
)

var MailState_name = map[int32]string{
	0: "MailUnRead",
	1: "MailRead",
	2: "MailReceived",
}

var MailState_value = map[string]int32{
	"MailUnRead":   0,
	"MailRead":     1,
	"MailReceived": 2,
}

func (x MailState) String() string {
	return proto.EnumName(MailState_name, int32(x))
}

func (MailState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_957aaf6e167bf036, []int{3}
}

type PVPType int32

const (
	PVPType_MINVALID     PVPType = 0
	PVPType_M1V1         PVPType = 100
	PVPType_M2V2         PVPType = 103
	PVPType_M3V3         PVPType = 104
	PVPType_M5V5         PVPType = 105
	PVPType_M1V10        PVPType = 106
	PVPType_RankM3v3     PVPType = 200
	PVPType_RankM5v5     PVPType = 201
	PVPType_TeamM1v1     PVPType = 301
	PVPType_C2V2         PVPType = 401
	PVPType_C3V3         PVPType = 402
	PVPType_C5V5         PVPType = 403
	PVPType_H3V3         PVPType = 501
	PVPType_RankH3V3     PVPType = 502
	PVPType_Conscript3v3 PVPType = 601
	PVPType_M1           PVPType = 1000
	PVPType_MT1          PVPType = 2000
	PVPType_MT1V1        PVPType = 2001
	PVPType_MT2V2        PVPType = 2002
	PVPType_MT3V3        PVPType = 2003
)

var PVPType_name = map[int32]string{
	0:    "MINVALID",
	100:  "M1V1",
	103:  "M2V2",
	104:  "M3V3",
	105:  "M5V5",
	106:  "M1V10",
	200:  "RankM3v3",
	201:  "RankM5v5",
	301:  "TeamM1v1",
	401:  "C2V2",
	402:  "C3V3",
	403:  "C5V5",
	501:  "H3V3",
	502:  "RankH3V3",
	601:  "Conscript3v3",
	1000: "M1",
	2000: "MT1",
	2001: "MT1V1",
	2002: "MT2V2",
	2003: "MT3V3",
}

var PVPType_value = map[string]int32{
	"MINVALID":     0,
	"M1V1":         100,
	"M2V2":         103,
	"M3V3":         104,
	"M5V5":         105,
	"M1V10":        106,
	"RankM3v3":     200,
	"RankM5v5":     201,
	"TeamM1v1":     301,
	"C2V2":         401,
	"C3V3":         402,
	"C5V5":         403,
	"H3V3":         501,
	"RankH3V3":     502,
	"Conscript3v3": 601,
	"M1":           1000,
	"MT1":          2000,
	"MT1V1":        2001,
	"MT2V2":        2002,
	"MT3V3":        2003,
}

func (x PVPType) String() string {
	return proto.EnumName(PVPType_name, int32(x))
}

func (PVPType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_957aaf6e167bf036, []int{4}
}

type BuildState int32

const (
	BuildState_Normal   BuildState = 0
	BuildState_Building BuildState = 1
	BuildState_LevelUp  BuildState = 2
)

var BuildState_name = map[int32]string{
	0: "Normal",
	1: "Building",
	2: "LevelUp",
}

var BuildState_value = map[string]int32{
	"Normal":   0,
	"Building": 1,
	"LevelUp":  2,
}

func (x BuildState) String() string {
	return proto.EnumName(BuildState_name, int32(x))
}

func (BuildState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_957aaf6e167bf036, []int{5}
}

type SpeedUpType int32

const (
	SpeedUpType_SpeedUpType_Invite SpeedUpType = 0
)

var SpeedUpType_name = map[int32]string{
	0: "SpeedUpType_Invite",
}

var SpeedUpType_value = map[string]int32{
	"SpeedUpType_Invite": 0,
}

func (x SpeedUpType) String() string {
	return proto.EnumName(SpeedUpType_name, int32(x))
}

func (SpeedUpType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_957aaf6e167bf036, []int{6}
}

//道具类型
type ItemType int32

const (
	ItemType_invalid           ItemType = 0
	ItemType_diamond           ItemType = 1
	ItemType_gold              ItemType = 2
	ItemType_dollar            ItemType = 3
	ItemType_product           ItemType = 4
	ItemType_Item              ItemType = 5
	ItemType_property          ItemType = 6
	ItemType_artistContract    ItemType = 7
	ItemType_gift              ItemType = 8
	ItemType_buildingMaterial  ItemType = 9
	ItemType_licence           ItemType = 10
	ItemType_fan               ItemType = 11
	ItemType_like              ItemType = 12
	ItemType_expect            ItemType = 13
	ItemType_cup               ItemType = 14
	ItemType_artistPhysical    ItemType = 15
	ItemType_artistChip        ItemType = 16
	ItemType_multipleChoiceOne ItemType = 17
	ItemType_script            ItemType = 18
	ItemType_completeType      ItemType = 19
	ItemType_information       ItemType = 20
)

var ItemType_name = map[int32]string{
	0:  "invalid",
	1:  "diamond",
	2:  "gold",
	3:  "dollar",
	4:  "product",
	5:  "Item",
	6:  "property",
	7:  "artistContract",
	8:  "gift",
	9:  "buildingMaterial",
	10: "licence",
	11: "fan",
	12: "like",
	13: "expect",
	14: "cup",
	15: "artistPhysical",
	16: "artistChip",
	17: "multipleChoiceOne",
	18: "script",
	19: "completeType",
	20: "information",
}

var ItemType_value = map[string]int32{
	"invalid":           0,
	"diamond":           1,
	"gold":              2,
	"dollar":            3,
	"product":           4,
	"Item":              5,
	"property":          6,
	"artistContract":    7,
	"gift":              8,
	"buildingMaterial":  9,
	"licence":           10,
	"fan":               11,
	"like":              12,
	"expect":            13,
	"cup":               14,
	"artistPhysical":    15,
	"artistChip":        16,
	"multipleChoiceOne": 17,
	"script":            18,
	"completeType":      19,
	"information":       20,
}

func (x ItemType) String() string {
	return proto.EnumName(ItemType_name, int32(x))
}

func (ItemType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_957aaf6e167bf036, []int{7}
}

//请报约束条件
type IntelligenceConst int32

const (
	IntelligenceConst_INVALID                   IntelligenceConst = 0
	IntelligenceConst_minNum                    IntelligenceConst = 3
	IntelligenceConst_maxNum                    IntelligenceConst = 10
	IntelligenceConst_SpecialIntelligenceTypeId IntelligenceConst = 20
	IntelligenceConst_TreasureChestExtractNum   IntelligenceConst = 100
)

var IntelligenceConst_name = map[int32]string{
	0:   "INVALID",
	3:   "minNum",
	10:  "maxNum",
	20:  "SpecialIntelligenceTypeId",
	100: "TreasureChestExtractNum",
}

var IntelligenceConst_value = map[string]int32{
	"INVALID":                   0,
	"minNum":                    3,
	"maxNum":                    10,
	"SpecialIntelligenceTypeId": 20,
	"TreasureChestExtractNum":   100,
}

func (x IntelligenceConst) String() string {
	return proto.EnumName(IntelligenceConst_name, int32(x))
}

func (IntelligenceConst) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_957aaf6e167bf036, []int{8}
}

// 拍摄--步骤
type StudioStep int32

const (
	StudioStep_requestStoryList  StudioStep = 0
	StudioStep_selectStory       StudioStep = 1
	StudioStep_selectActor       StudioStep = 2
	StudioStep_selectEventOption StudioStep = 3
	StudioStep_eventEvaluations  StudioStep = 4
	StudioStep_matchingDisplay   StudioStep = 5
	StudioStep_propDisplay       StudioStep = 6
	StudioStep_shareDisplay      StudioStep = 7
	StudioStep_firstReward       StudioStep = 8
	StudioStep_continuedReward   StudioStep = 9
	StudioStep_expReward         StudioStep = 10
	StudioStep_end               StudioStep = 11
)

var StudioStep_name = map[int32]string{
	0:  "requestStoryList",
	1:  "selectStory",
	2:  "selectActor",
	3:  "selectEventOption",
	4:  "eventEvaluations",
	5:  "matchingDisplay",
	6:  "propDisplay",
	7:  "shareDisplay",
	8:  "firstReward",
	9:  "continuedReward",
	10: "expReward",
	11: "end",
}

var StudioStep_value = map[string]int32{
	"requestStoryList":  0,
	"selectStory":       1,
	"selectActor":       2,
	"selectEventOption": 3,
	"eventEvaluations":  4,
	"matchingDisplay":   5,
	"propDisplay":       6,
	"shareDisplay":      7,
	"firstReward":       8,
	"continuedReward":   9,
	"expReward":         10,
	"end":               11,
}

func (x StudioStep) String() string {
	return proto.EnumName(StudioStep_name, int32(x))
}

func (StudioStep) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_957aaf6e167bf036, []int{9}
}

// 拍摄--事件类型
type StudioEventType int32

const (
	StudioEventType_storyCharactersBest StudioEventType = 0
	StudioEventType_storyNoraml         StudioEventType = 1
	StudioEventType_storyFunny          StudioEventType = 2
)

var StudioEventType_name = map[int32]string{
	0: "storyCharactersBest",
	1: "storyNoraml",
	2: "storyFunny",
}

var StudioEventType_value = map[string]int32{
	"storyCharactersBest": 0,
	"storyNoraml":         1,
	"storyFunny":          2,
}

func (x StudioEventType) String() string {
	return proto.EnumName(StudioEventType_name, int32(x))
}

func (StudioEventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_957aaf6e167bf036, []int{10}
}

// 拍摄--艺人--状态
type StudioActorState int32

const (
	StudioActorState_normal StudioActorState = 0
	StudioActorState_help   StudioActorState = 1
	StudioActorState_best   StudioActorState = 2
)

var StudioActorState_name = map[int32]string{
	0: "normal",
	1: "help",
	2: "best",
}

var StudioActorState_value = map[string]int32{
	"normal": 0,
	"help":   1,
	"best":   2,
}

func (x StudioActorState) String() string {
	return proto.EnumName(StudioActorState_name, int32(x))
}

func (StudioActorState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_957aaf6e167bf036, []int{11}
}

// 拍摄--剧本--类型
type StudioStoryType int32

const (
	StudioStoryType_StudioStoryType_Normal StudioStoryType = 0
	StudioStoryType_StudioStoryType_gold   StudioStoryType = 1
)

var StudioStoryType_name = map[int32]string{
	0: "StudioStoryType_Normal",
	1: "StudioStoryType_gold",
}

var StudioStoryType_value = map[string]int32{
	"StudioStoryType_Normal": 0,
	"StudioStoryType_gold":   1,
}

func (x StudioStoryType) String() string {
	return proto.EnumName(StudioStoryType_name, int32(x))
}

func (StudioStoryType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_957aaf6e167bf036, []int{12}
}

func init() {
	proto.RegisterEnum("GamerStatus", GamerStatus_name, GamerStatus_value)
	proto.RegisterEnum("ChatChannel", ChatChannel_name, ChatChannel_value)
	proto.RegisterEnum("MailType", MailType_name, MailType_value)
	proto.RegisterEnum("MailState", MailState_name, MailState_value)
	proto.RegisterEnum("PVPType", PVPType_name, PVPType_value)
	proto.RegisterEnum("BuildState", BuildState_name, BuildState_value)
	proto.RegisterEnum("SpeedUpType", SpeedUpType_name, SpeedUpType_value)
	proto.RegisterEnum("ItemType", ItemType_name, ItemType_value)
	proto.RegisterEnum("IntelligenceConst", IntelligenceConst_name, IntelligenceConst_value)
	proto.RegisterEnum("StudioStep", StudioStep_name, StudioStep_value)
	proto.RegisterEnum("StudioEventType", StudioEventType_name, StudioEventType_value)
	proto.RegisterEnum("StudioActorState", StudioActorState_name, StudioActorState_value)
	proto.RegisterEnum("StudioStoryType", StudioStoryType_name, StudioStoryType_value)
}

func init() { proto.RegisterFile("const_define.proto", fileDescriptor_957aaf6e167bf036) }

var fileDescriptor_957aaf6e167bf036 = []byte{
	// 925 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x54, 0x4d, 0x72, 0x23, 0x45,
	0x13, 0x95, 0x5a, 0xb2, 0x7e, 0x52, 0xb6, 0x95, 0x2e, 0xfb, 0x9b, 0xf9, 0x80, 0x60, 0xc9, 0xa6,
	0x89, 0x20, 0x90, 0x15, 0x5e, 0xb1, 0xf2, 0x68, 0x3c, 0x83, 0x02, 0xcb, 0x76, 0x58, 0xb6, 0x58,
	0x3a, 0xca, 0xdd, 0x29, 0x77, 0x31, 0xd5, 0x55, 0x4d, 0x75, 0xb5, 0xb0, 0x8e, 0x01, 0x9c, 0x83,
	0x0d, 0xa7, 0x80, 0x1d, 0x3f, 0x2b, 0x4e, 0x00, 0x17, 0x80, 0x15, 0x0b, 0x22, 0xab, 0x65, 0x7b,
	0x62, 0x76, 0xf9, 0x5e, 0x55, 0xbf, 0xcc, 0x7c, 0x99, 0xd5, 0x20, 0x12, 0x6b, 0x4a, 0x7f, 0x93,
	0xd2, 0x52, 0x19, 0xfa, 0xa4, 0x70, 0xd6, 0xdb, 0xf8, 0x1c, 0x06, 0xaf, 0x65, 0x4e, 0x6e, 0xee,
	0xa5, 0xaf, 0x4a, 0x31, 0x80, 0xee, 0xf9, 0x72, 0xa9, 0x95, 0x21, 0x6c, 0x08, 0x80, 0xce, 0xb9,
	0x09, 0x71, 0x93, 0x0f, 0xae, 0x48, 0xe6, 0xca, 0xdc, 0x61, 0x24, 0xb6, 0xa1, 0x37, 0x93, 0x3e,
	0xc9, 0x18, 0xb5, 0x18, 0xbd, 0x52, 0x77, 0x99, 0x67, 0xd4, 0x8e, 0x3f, 0x86, 0xc1, 0x24, 0x93,
	0x7e, 0x92, 0x49, 0x63, 0x48, 0x8b, 0x1d, 0xe8, 0x07, 0x7d, 0xe6, 0xb0, 0xc1, 0xf0, 0x4b, 0xeb,
	0x74, 0x1a, 0x60, 0x33, 0x3e, 0x63, 0x21, 0xa5, 0xaf, 0xd6, 0x05, 0x09, 0x84, 0xed, 0xe3, 0xc4,
	0xab, 0x95, 0xf2, 0x6b, 0xe6, 0xb0, 0xc1, 0x39, 0xe7, 0xeb, 0x32, 0x80, 0xa6, 0x38, 0x00, 0x3c,
	0x36, 0xc6, 0x56, 0x26, 0xa1, 0x9c, 0x8c, 0x0f, 0x6c, 0xf4, 0x28, 0x1f, 0x60, 0x2b, 0xfe, 0x0c,
	0xfa, 0x1c, 0x71, 0x33, 0x24, 0x76, 0x01, 0x18, 0x5c, 0x9b, 0x4b, 0x92, 0x29, 0x36, 0xea, 0xaa,
	0x95, 0x0e, 0xa8, 0xc9, 0xe9, 0x6a, 0x94, 0x90, 0x5a, 0x51, 0x8a, 0x51, 0xfc, 0x6f, 0x13, 0xba,
	0x17, 0x8b, 0x8b, 0x50, 0x0c, 0xdf, 0x9d, 0x9e, 0x2d, 0x8e, 0x4f, 0xa7, 0x2f, 0xb1, 0x21, 0x7a,
	0xd0, 0x9e, 0x8d, 0x16, 0x23, 0x4c, 0x43, 0x74, 0xb8, 0x38, 0xc4, 0xbb, 0x10, 0x8d, 0x17, 0x63,
	0xcc, 0x42, 0x74, 0xb4, 0x38, 0x42, 0x25, 0xfa, 0xb0, 0xc5, 0xf7, 0x3e, 0xc5, 0xaf, 0xc4, 0x0e,
	0xf4, 0x2e, 0xa5, 0x79, 0x33, 0x1b, 0xaf, 0xc6, 0xf8, 0x53, 0xf3, 0x11, 0x1e, 0xad, 0x8e, 0xf0,
	0xe7, 0x00, 0xd9, 0xcd, 0xd9, 0x68, 0x35, 0xc2, 0x1f, 0x22, 0xd1, 0x87, 0xf6, 0x84, 0x55, 0xbf,
	0x6d, 0x85, 0x90, 0x65, 0xbf, 0xab, 0x43, 0xd6, 0xfd, 0x3e, 0x84, 0x9f, 0x33, 0xfb, 0x77, 0xeb,
	0x41, 0x29, 0xc0, 0x7f, 0x5a, 0x62, 0x0f, 0xb6, 0x27, 0xd6, 0x94, 0x89, 0x53, 0x85, 0xe7, 0x5c,
	0x7f, 0xb4, 0x45, 0x17, 0xa2, 0xd9, 0x08, 0xff, 0xea, 0x8a, 0x1e, 0xb4, 0x66, 0x57, 0x23, 0xfc,
	0x65, 0x28, 0x00, 0xb6, 0x66, 0x57, 0xdc, 0xc1, 0xaf, 0x9b, 0x98, 0xb3, 0xfd, 0xb6, 0x89, 0x59,
	0xe9, 0xf7, 0x61, 0x3c, 0x06, 0x78, 0x51, 0x29, 0x9d, 0xd6, 0xe6, 0x01, 0x74, 0xce, 0xac, 0xcb,
	0xa5, 0xae, 0x8d, 0x0b, 0x27, 0x3c, 0xe0, 0xb0, 0x09, 0xa7, 0xb4, 0x22, 0x7d, 0x5d, 0x60, 0x14,
	0x7f, 0x04, 0x83, 0x79, 0x41, 0x94, 0x5e, 0x17, 0xc1, 0xb6, 0x67, 0x20, 0xde, 0x82, 0x37, 0x53,
	0xb3, 0x52, 0x9e, 0xb0, 0x11, 0xff, 0x18, 0x41, 0x6f, 0xea, 0x29, 0x0f, 0x97, 0x06, 0xd0, 0x55,
	0x66, 0x25, 0xb5, 0x4a, 0xeb, 0x19, 0xa7, 0x4a, 0xe6, 0xd6, 0xf0, 0x4c, 0x7a, 0xd0, 0xbe, 0xb3,
	0x3a, 0xc5, 0x88, 0xd3, 0xa7, 0x56, 0x6b, 0xe9, 0xb0, 0xc5, 0x57, 0x0a, 0x67, 0xd3, 0x2a, 0xf1,
	0xd8, 0xe6, 0x2b, 0x2c, 0x84, 0x5b, 0x5c, 0x55, 0xe1, 0x6c, 0x41, 0xce, 0xaf, 0xb1, 0x23, 0x04,
	0xec, 0x4a, 0xe7, 0x55, 0xe9, 0x27, 0xd6, 0x78, 0x27, 0x13, 0x8f, 0xdd, 0x20, 0xa7, 0x96, 0x1e,
	0x7b, 0xbc, 0x3c, 0xb7, 0x9b, 0x0e, 0x66, 0xd2, 0x93, 0x53, 0x52, 0x63, 0x9f, 0x85, 0xb5, 0x4a,
	0xc8, 0x24, 0x84, 0x20, 0xba, 0xd0, 0x5a, 0x4a, 0x83, 0x03, 0xfe, 0x4a, 0xab, 0x37, 0x84, 0xdb,
	0x5c, 0x04, 0xdd, 0x17, 0x94, 0x78, 0xdc, 0xe1, 0xe3, 0xa4, 0x2a, 0x70, 0xf7, 0x29, 0xd1, 0x45,
	0xb6, 0x2e, 0x55, 0x22, 0x35, 0x0e, 0x79, 0xd3, 0x36, 0xc9, 0x33, 0x55, 0x20, 0x8a, 0xff, 0xc1,
	0x5e, 0x5e, 0x69, 0xaf, 0x0a, 0x4d, 0x93, 0xcc, 0xaa, 0x84, 0xce, 0x0d, 0xe1, 0x1e, 0xeb, 0xd5,
	0x83, 0x42, 0xc1, 0xeb, 0x97, 0xd8, 0xbc, 0xd0, 0xe4, 0x89, 0x4d, 0xc1, 0x7d, 0x31, 0x84, 0x81,
	0x32, 0x4b, 0xf6, 0xdc, 0x2b, 0x6b, 0xf0, 0x20, 0xf6, 0xb0, 0x37, 0x35, 0x9e, 0xb4, 0x56, 0x77,
	0x5c, 0x23, 0x8f, 0xd9, 0x73, 0xcd, 0x4f, 0x7b, 0x09, 0xd0, 0xc9, 0x95, 0x39, 0xab, 0x72, 0x6c,
	0x85, 0x58, 0xde, 0x73, 0x0c, 0xe2, 0x43, 0x78, 0x6f, 0x5e, 0x50, 0xa2, 0xa4, 0x7e, 0x5b, 0x80,
	0xf3, 0x4c, 0x53, 0x3c, 0x10, 0x1f, 0xc0, 0xf3, 0x2b, 0x47, 0xb2, 0xac, 0x1c, 0x4d, 0x32, 0x2a,
	0xfd, 0xc9, 0x7d, 0x70, 0x8c, 0xbf, 0x4d, 0xe3, 0x3f, 0x9b, 0x00, 0x73, 0x5f, 0xa5, 0xca, 0xce,
	0x3d, 0x15, 0xec, 0x9c, 0xa3, 0xaf, 0x2b, 0x2a, 0xfd, 0xdc, 0x5b, 0xb7, 0x3e, 0x55, 0x25, 0x3f,
	0xe3, 0x21, 0x0c, 0x4a, 0xd2, 0x94, 0xd4, 0x24, 0x36, 0x9f, 0x88, 0xe3, 0xc4, 0x5b, 0x87, 0x11,
	0x5b, 0x50, 0x13, 0x27, 0x2b, 0x32, 0xfe, 0xbc, 0x08, 0x3d, 0xb5, 0x58, 0x8e, 0x98, 0x38, 0x59,
	0x49, 0x5d, 0x85, 0x46, 0x4b, 0x6c, 0x8b, 0x7d, 0x18, 0xe6, 0x9b, 0xff, 0xc9, 0x4b, 0x55, 0x16,
	0x5a, 0xae, 0x71, 0x8b, 0x25, 0x79, 0xbe, 0x0f, 0x44, 0x87, 0x2d, 0x2b, 0x33, 0xe9, 0xe8, 0x81,
	0xe9, 0xf2, 0x95, 0xa5, 0x72, 0xa5, 0xbf, 0xa4, 0x6f, 0xa4, 0x4b, 0xb1, 0xc7, 0x42, 0x89, 0x35,
	0x5e, 0x99, 0x8a, 0xd2, 0x0d, 0xd9, 0xe7, 0x7f, 0x04, 0xdd, 0x17, 0x1b, 0x18, 0x06, 0x4d, 0x26,
	0xc5, 0x41, 0xfc, 0x05, 0x0c, 0xeb, 0x46, 0x43, 0x89, 0x61, 0x35, 0x9f, 0xc3, 0x7e, 0xc9, 0x1d,
	0x4d, 0x32, 0xc9, 0x8e, 0x90, 0x2b, 0x5f, 0xd0, 0x63, 0xc3, 0x7c, 0x70, 0x66, 0x9d, 0xcc, 0xf9,
	0x77, 0xb4, 0x0b, 0x10, 0x88, 0x57, 0x95, 0x31, 0x6b, 0x8c, 0xe2, 0x43, 0xc0, 0x5a, 0x2c, 0x18,
	0xf0, 0xf8, 0x86, 0xcc, 0xc3, 0x1b, 0xea, 0x41, 0x3b, 0x23, 0x5d, 0xd4, 0x4b, 0x7e, 0xcb, 0xa2,
	0x51, 0xfc, 0xfa, 0xa1, 0x80, 0xe0, 0x62, 0x28, 0xe0, 0x7d, 0x78, 0xf6, 0x0e, 0x75, 0xf3, 0xf8,
	0x0c, 0xff, 0x0f, 0x07, 0xef, 0x9e, 0x85, 0xd7, 0xd2, 0xbc, 0xed, 0x84, 0x7f, 0xf9, 0xf8, 0xbf,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x4d, 0xfd, 0x5a, 0x6d, 0xe1, 0x05, 0x00, 0x00,
}
