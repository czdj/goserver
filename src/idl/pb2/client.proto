syntax = "proto2";
import "common.proto";
import "league.proto";
import "const_define.proto";
//玩家登陆
message GamerLoginC2S
{
	optional int32  id      = 1;//玩家id
	optional string session = 2;//快速重连session，正常登陆不用填
	optional string addr = 3;  //代理使用
}

//玩家登陆
message GamerLoginS2C
{
	optional int32 error = 1;
	optional GamerMain main = 2;             //玩家主信息
}

message GamerLoginGetDataC2S
{
	optional int32 id = 1;				//玩家id
}

message GamerLoginGetDataS2C
{
	optional int32 error = 1;
	optional ServerTime time = 2;  //服务器当前时间
	repeated GamerFriendRequest friendReqs = 3;
	repeated GamerFriend friends = 4;
	optional int32 lengthRank = 5;
}

// 服务器时间
message ServerTimeC2S
{
	optional int32 id = 1;
}

// 服务器时间
message ServerTimeS2C
{
	optional int32 error = 1;
	optional ServerTime time = 2;  //服务器当前时间
}

message GamerNotifyLoginOtherS2C
{
	optional int32 error = 1;
}

message GamerSubChatChannelC2S
{
	optional int32 id = 1;				//玩家id
	optional int32 channel = 2;
	optional bool open = 3;
}

message GamerSubChatChannelS2C
{
	optional int32 error = 1;				//玩家id
}

//--------------------------------------------------------------------------社交
//好友聊天
message GamerFriendChatC2S
{
	optional int32 id = 1;	//个人id
	optional int32 toId = 2;   //接收好友id
	optional string msg = 3;  //聊天内容
}

//好友聊天
message GamerFriendChatS2C
{
	optional int32 error = 1;
}

//世界聊天
message GamerWorldChatC2S
{
	optional int32 id = 1;	//个人id
	optional int32 server = 2;//服务器
	optional string msg = 3;  //聊天内容
}

//世界聊天
message GamerWorldChatS2C
{
	optional int32 error = 1;
}

//好友聊天
message GamerTestChatC2S
{
	optional int32 id = 1;	//个人id
	optional int32 toId = 2;   //接收好友id
	optional string msg = 3;  //聊天内容
}

//好友聊天
message GamerTestChatS2C
{
	optional int32 error = 1;
	optional int32 id = 2;	//个人id
}

//好友聊天
message GamerClubRequestC2S
{
	optional int32 id = 1;	//个人id
	optional int32 clubId = 2;   //接收好友id
	optional string msg = 3;  //聊天内容
}

//好友聊天
message GamerClubRequestS2C
{
	optional int32 error = 1;
	optional int32 id = 2;	//个人id
	optional bool ok = 3;
}

message GamerNotifyNewChatS2C
{
	optional int32 error = 1;
	repeated ChatData chats = 2;
}

message GamerNewFriendReqC2S
{
	optional int32 id = 1;  //玩家id
	optional int32 oid = 2; //对方id
	optional string msg = 3;//说的话
}

message GamerNewFriendReqS2C
{
	optional int32 error = 1;
}

message GamerNotifyNewFriendReqS2C
{
	optional int32 error = 1;
	optional GamerFriendRequest request = 2;
}

message GamerProcessFriendReqC2S
{
	optional int32 id = 1;   //玩家id
	optional int32 oid = 2;  //对方id
	optional bool result = 3;//结果  接受  拒绝
}

message GamerProcessFriendReqS2C
{
	optional int32 error = 1;
}

message GamerNotifyNewFriendS2C
{
	optional int32 error = 1;
	optional GamerFriend friend = 2;
}

//---------------------------------邮件-------------------------------------------//
message GamerNotifyMailS2C
{
	optional int32 error = 1;
	optional int32 leftMailNum = 2;
	repeated Mail mails = 3;
}

message GamerNotifyNewMailS2C
{
	optional int32 error = 1;
	repeated Mail mails = 2;
}

message GamerGetMailC2S
{
	optional int32 id = 1;
}

message GamerGetMailS2C
{
	optional int32 error = 1;
}

message GamerDelMailC2S
{
	optional int32 id = 1;
	optional string mailId = 2;
}

message GamerDelMailS2C
{
	optional int32 error = 1;
}

message GamerDelHaveReadMailC2S
{
	optional int32 id = 1;
}

message GamerDelHaveReadMailS2C
{
	optional int32 error = 1;
}

message GamerOneKeyRcvMailRewardC2S
{
	optional int32 id = 1;
}

message GamerOneKeyRcvMailRewardS2C
{
	optional int32 error = 1;
}

message GamerChangeMailStateC2S
{
	optional int32 id = 1;
	optional string mailId = 2;
	optional MailState state = 3;
}

message GamerChangeMailStateS2C
{
	optional int32 error = 1;
}

//--------------------------------------------------------------------------社交

//--------------------------------------------------------------------------匹配
message GamerMatchC2S
{
	optional int32 id = 1;   //玩家id
	optional int32 type = 2;
}

message GamerMatchS2C
{
	optional int32 error = 1;
}

message GamerNotifyMatchInfoS2C
{
	optional int32 error = 1;
	optional MatchInfo matchInfo = 2;
	optional bool reconn = 3;
}

message GamerPVPSyncC2S
{
	optional int32 id = 1;   //玩家id
	optional string  session = 2;
	optional PVPInput input = 3;
	repeated int32 needFrames = 4;
	repeated uint64  crc = 5;//CRC校验
	repeated PVPInput agents = 6;//ai托管序列
	optional bool reconn = 7;//断线重连
	optional int32 index = 8;
	optional string addr = 9;
	optional PVPResult result = 10;
}

message GamerPVPSyncS2C
{
	optional int32 error = 1;
}

message GamerNotifyPVPSyncS2C
{
	optional int32 maxFrameCount = 1;
	repeated PVPFrame frames = 2;
	optional bytes framesData = 3;
	repeated bytes frameData = 4;
	optional int32 index = 5;
	optional int32 delta = 6;
	optional string session = 7;
}

message GamerNotifyNewPVPResultS2C
{
	optional int32 error = 1;
	optional int32 icon = 2;
	optional int32 oldLengthRank = 3;
	optional int32 newLengthRank = 4;
	optional PVPResult result = 5;
}

message GamerNotifyIconChangeS2C
{
	optional int32 error = 1;
	optional int32 icon = 2;
}


message GamerGetRealTimeRankC2S
{
	optional int32 id = 1;
}

message GamerGetRealTimeRankS2C
{
	optional int32 error = 1;
	repeated RankLength ranks = 2;
}

message GamerCheckPVPBattleC2S
{
	optional int32 id = 1;
	optional string session = 2;
}

message GamerCheckPVPBattleS2C
{
	optional int32 error = 1;
	optional MatchInfo matchInfo = 2;
}

message GamerUploadWXInfoC2S
{
	optional int32 id = 1;
	optional WXInfo wxInfo = 2;
}

message GamerUploadWXInfoS2C
{
	optional int32 error = 1;
}


//创建联盟
message CreateLeagueC2S
{
	optional int32 id = 1;  //个人id
	optional string name =2;    //联盟名字
	optional string declaration = 3;//宣言
}

//创建联盟返回
message CreateLeagueS2C
{
	optional int32 error = 1;
	optional LeagueData data =2;
}

//玩家上线推送联盟数据
message GamerNotifyLeagueDataS2C
{
	optional int32 error = 1;
	optional LeagueData data = 2; //联盟数据
	repeated int32 onlineGamerList =3;//在线玩家列表
}

//玩家上线告知其他在线玩家
message GamerNotifyLeagueGamerOnlineS2C
{
	optional int32 error = 1;
	optional int32 gid =2;
}


//--------------------------------背包-------------------------------------------//
message GamerGetBackpackC2S
{
	optional int32 id = 1;
}

message GamerGetBackpackS2C
{
	optional int32 error = 1;
	repeated GameItem items = 2;
}

//单个道具更变消息
message GamerNotifyItemS2C
{
	optional int32 error = 1;
	optional GameItem item = 2;
}

message GamerSellItemC2S
{
	optional int32 id = 1;
	optional int32 itemId = 2;
	optional int32 num = 3;
}

message  GamerSellItemS2C
{
	optional int32 error = 1;
}

message GamerUseItemC2S
{
	optional int32 id = 1;
	optional int32 itemId = 2;
	optional int32 num = 3;
}

message  GamerUseItemS2C
{
	optional int32 error = 1;
}

message GamerCompoundItemC2S
{
	optional int32 id = 1;
	optional int32 itemId = 3;
	optional int32 num = 4;
}

message  GamerCompoundItemS2C
{
	optional int32 error = 1;
}

message GamerSplitItemC2S
{
	optional int32 id = 1;
	optional int32 itemId = 2;
	optional int32 num = 3;
}

message  GamerSplitItemS2C
{
	optional int32 error = 1;
}

message GamerNotifyItemChangeS2C
{
	optional int32 error = 1;
	repeated GameItem itemsChange = 2;
}

//***************艺人****************//
message GamerGetActorListC2S
{
	optional int32 id = 1;
}

message  GamerGetActorListS2C
{
	optional int32 error = 1;
	optional int32 maxActorNum = 2;
	repeated Actor actors = 3;
}

message GamerChangeActorNameC2S
{
	optional int32 id = 1;
	optional int32 actorId = 2;
	optional string name = 3;
}

message  GamerChangeActorNameS2C
{
	optional int32 error = 1;
}

message GamerActorUpLevelC2S
{
	optional int32 id = 1;
	optional int32 actorId = 2;
}

message  GamerActorUpLevelS2C
{
	optional int32 error = 1;
}

message GamerNotifyActorChangeS2C
{
	optional int32 error = 1;
	optional Actor actor = 2;
}

//--------------------------------GM-------------------------------------------//
message GMC2S
{
	optional int32 id = 1;
	optional string gm = 2;
}

message GMS2C
{
	optional int32 error = 1;
}

//***************剧本系统****************//

message GamerNotifyStoryListS2C
{
	optional int32 error = 1;
	repeated int32 storyIdList =2;
	repeated int32 storyGroupList =3;
}

//**********************建筑系统****************//

//上线通知建筑信息
message GamerNotifyBuildInfoS2C
{
	optional int32 error = 1;
	repeated BuildInfo buildInfo = 2;
}


//建筑创建和升级
message BuildLevelUpC2S
{
	optional int32 id = 1;
	optional int32 buildType =2; //建筑Id
}

message BuildLevelUpS2C
{
	optional int32 error = 1;
	optional BuildInfo buildInfo = 2;
}

//升级成功
message BuildEndOfLevelUpC2S
{
	optional int32 id = 1;
	optional int32 buildType =2; //建筑Id
}

message BuildEndOfLevelUpS2C
{
	optional int32 error = 1;
	optional BuildInfo buildInfo = 2;
}


//建筑突破
message BuildBreakUpC2S
{
	optional int32 id = 1;
	optional int32 buildType =2;//建筑Id
}

message BuildBreakUpS2C
{
	optional int32 error = 1;
	optional BuildInfo buildInfo = 2;
}

//建筑升级加速
message BuildSpeedUpC2S
{
	optional int32 id = 1;
	optional int32 buildType =2;//建筑Id
	optional SpeedUpType speedUpType =3; //加速类型
}

message BuildSpeedUpS2C
{
	optional int32 error = 1;
	optional BuildInfo buildInfo = 2;
}

message BuildGetProductC2S
{
	optional int32 id = 1;
	optional int32 buildType =2;
}

message BuildGetProductS2C
{
	optional int32 error = 1;
	optional int32 buildType =2;
	optional BuildProduct productInfo =3;
}

//艺人进驻建筑
message ActorEnterBuildC2S
{
	optional int32 id = 1;
	optional int32 actorId =2; //艺人id
	optional int32 cellId =3; //槽位id
}

//艺人进驻建筑
message ActorEnterBuildS2C
{
	optional int32 error = 1;
	optional int32 buildType =2;
	optional BuildActorCell actorCell = 3;
}


////艺人退出建筑
message ActorLeaveBuildC2S
{
	optional int32 id = 1;
	optional int32 actorId =2; //艺人id
	optional int32 cellId =3; //槽位id
}


//艺人退出建筑
message ActorLeaveBuildS2C
{
	optional int32 error = 1;
	optional int32 buildType =2;
	optional BuildActorCell actorCell = 3;
}

//**********************情报系统****************//
message GamerNotifyIntelligenceS2C
{
	optional int32 error = 1;
	optional int32 extractNum = 2;
	repeated Intelligence intelligences = 3;
}

message GamerGetIntelligenceC2S
{
	optional int32 id = 1;
}

message  GamerGetIntelligenceS2C
{
	optional int32 error = 1;
	optional int32 extractNum = 2;
	repeated Intelligence intelligences = 3;
}

message GamerExtractIntelligenceC2S
{
	optional int32 id = 1;
	optional int32 num = 2;//抽取次数
}

message GamerExtractIntelligenceS2C
{
	optional int32 error = 1;
	repeated Intelligence intelligences = 2;
}

message GamerIntelligenceTreasureChestC2S
{
	optional int32 id = 1;
}

message GamerIntelligenceTreasureChestS2C
{
	optional int32 error = 1;
	repeated GameItem items = 2;
}

message GamerIntelligenceParseC2S
{
	optional int32 id = 1;
	repeated int32 intelligencesId = 2;
}

message GamerIntelligenceParseS2C
{
	optional int32 error = 1;
	optional Actor actor = 2;
	repeated GameItem items = 3;
}


//*************************************拍摄系统*************************************************\\
//拍摄
message StudioC2S
{
	optional int32 id = 1;
}

message StudioS2C
{
	optional int32 error = 1;
	optional StudioData data = 2;        // 拍摄数据
}



//拍摄--剧本列表, step==StudioStep.requestStoryList
message StudioStoryListC2S
{
	optional int32 id = 1;
}

message StudioStoryListS2C
{
	optional int32 error = 1;
	repeated StudioStory storys = 2;       // 剧本列表
}


//拍摄--选择剧本
message StudioStorySelectC2S
{
	optional int32 id = 1;
	optional int32 storyId   = 2;                //剧本ID
	optional string name     = 3;                //剧本名称
}

message StudioStorySelectS2C
{
	optional int32 error = 1;                    //反馈, 0成功, 1名称不符
}

//拍摄--选择艺人
message StudioActorSelectC2S
{
	optional int32 id = 1;
	optional int32 storyCharactersId     = 2;                //艺人槽位ID
	optional int32 actorId               = 3;                //艺人ID
}

message StudioActorSelectS2C
{
	optional int32 error                 = 1;                //反馈, 0成功, 1选择艺人槽位不符
	optional int32 storyCharactersId     = 2;                //艺人槽位ID
	optional int32 actorId               = 3;                //艺人ID
	optional int32 cost                  = 4;                //消耗行动力
}

//拍摄--事件
message StudioEventS2C
{
	optional int32                   error           = 1;
	optional int32                   eventId         = 2;                            //事件ID
	optional StudioEventType         eventType       = 3;                            //事件类型
}

//拍摄--事件--选择选项
message StudioEventOptionSelectC2S
{
	optional int32 id = 1;
	optional int32 eventOption       = 2;                            //事件选项
}

message StudioEventOptionSelectS2C
{
	optional int32 error                             = 1;
	optional int32 eventId                           = 2;        //事件ID
	optional int32 eventType                         = 3;        //事件类型
	optional int32 eventOption                       = 4;        //事件选项
	repeated int32 eventEvaluations         = 5;        //事件评价列表
}


//拍摄--开始,事件结束后就是开始
message StudioStarC2S
{
	optional int32 id = 1;
}

message StudioStarS2C
{
	optional int32 error                 = 1;                //反馈, 0成功, 1行动力不足，2上阵艺人不足
	optional StudioData data             = 2;                // 拍摄数据
}

//拍摄--继续下一步骤
message StudioNextStepC2S
{
	optional int32 id = 1;
}


message StudioNextStepS2C
{
	optional int32                   error               = 1;
	optional StudioStep              step                = 2;            // 步骤
}


//==========================================================
// 拍摄后期收益
//-----------------------------------------------------------

//拍摄后期收益--数据列表
message StudioContinuedListC2S
{
	optional int32 id = 1;
}

message StudioContinuedListS2C
{
	optional int32                                       error       = 1;
	repeated StudioContinuedData                list        = 2;                //拍摄后期收益数据列表
}



//拍摄后期收益--获取收益
message StudioContinuedReceiveC2S
{
	optional int32 id = 1;
	optional int32 uid = 2;
}

message StudioContinuedReceiveS2C
{
	optional int32                               error       = 1;
	optional StudioContinuedData                 item        = 2;
}


//拍摄后期收益--获取所有收益
message StudioContinuedReceiveAllC2S
{
	optional int32 id = 1;
}

message StudioContinuedReceiveAllS2C
{
	optional int32                               error       = 1;
	repeated StudioContinuedData        list        = 2;                //拍摄后期收益数据列表
}